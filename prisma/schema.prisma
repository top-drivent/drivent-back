// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int          @id @default(autoincrement())
  email      String       @unique @db.VarChar(255)
  password   String       @db.VarChar(255)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  Session    Session[]
  Enrollment Enrollment[]
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int
  User      User     @relation(fields: [userId], references: [id])
  token     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Event {
  id                 Int      @id @default(autoincrement())
  title              String   @db.VarChar(255)
  backgroundImageUrl String   @db.VarChar(255)
  logoImageUrl       String   @db.VarChar(255)
  startsAt           DateTime
  endsAt             DateTime
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model Enrollment {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255)
  cpf       String    @db.VarChar(255)
  birthday  DateTime
  phone     String    @db.VarChar(255)
  userId    Int       @unique
  User      User      @relation(fields: [userId], references: [id])
  Address   Address[]
  Payment   Payment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  bed       bed[]
  seat      seat[]
}

model Address {
  id            Int        @id @default(autoincrement())
  cep           String     @db.VarChar(255)
  street        String     @db.VarChar(255)
  city          String     @db.VarChar(255)
  state         String     @db.VarChar(255)
  number        String     @db.VarChar(255)
  neighborhood  String     @db.VarChar(255)
  addressDetail String?    @db.VarChar(255)
  enrollmentId  Int        @unique
  Enrollment    Enrollment @relation(fields: [enrollmentId], references: [id])
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model Payment {
  id                 Int                @id @default(autoincrement())
  enrollmentId       Int                @unique
  Enrollment         Enrollment         @relation(fields: [enrollmentId], references: [id])
  ticketModality     TicketAccomodation
  ticketAccomodation Boolean            @db.Boolean
  ticketValue        String             @db.VarChar(255)
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
}

enum TicketAccomodation {
  PRESENTIAL
  ONLINE
}

model hotel {
  id                 Int                  @id @default(autoincrement())
  name               String               @unique @db.VarChar(255)
  imageUrl           String               @db.VarChar(255)
  accomodationsHotel accomodationsHotel[]
  room               room[]
}

model accomodationsType {
  id                 Int                  @id @default(autoincrement())
  type               String               @unique
  accomodationsHotel accomodationsHotel[]
  room               room[]
}

model accomodationsHotel {
  hotelId             Int
  hotel               hotel             @relation(fields: [hotelId], references: [id])
  accomodationsTypeId Int
  accomodationsType   accomodationsType @relation(fields: [accomodationsTypeId], references: [id])

  @@id([hotelId, accomodationsTypeId])
}

model room {
  id                  Int               @id @default(autoincrement())
  accomodationsTypeId Int
  accomodationsType   accomodationsType @relation(fields: [accomodationsTypeId], references: [id])
  hotelId             Int
  hotel               hotel             @relation(fields: [hotelId], references: [id])
  bed                 bed[]
}

model bed {
  id           Int         @id @default(autoincrement())
  roomId       Int
  room         room        @relation(fields: [roomId], references: [id])
  Enrollment   Enrollment? @relation(fields: [enrollmentId], references: [id])
  enrollmentId Int?
}

model location {
  id       Int        @id @default(autoincrement())
  name     String     @unique @db.VarChar(255)
  activity activity[]
  seat     seat[]
}

model seat {
  id           Int         @id @default(autoincrement())
  Enrollment   Enrollment? @relation(fields: [enrollmentId], references: [id])
  enrollmentId Int?
  activity     activity    @relation(fields: [activityId], references: [id])
  activityId   Int
  location     location    @relation(fields: [locationId], references: [id])
  locationId   Int
}

model activity {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(255)
  date       DateTime @db.Date
  startTime  DateTime @db.Time(0)
  endTime    DateTime @db.Time(0)
  location   location @relation(fields: [locationId], references: [id])
  locationId Int
  seat       seat[]
}
